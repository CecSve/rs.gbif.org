{
  "identifier": "http://rs.gbif.org/data-packages/coldp/name-usage",
  "url": "http://rs.gbif.org/sandbox/experimental/data-packages/coldp/1.0/table-schemas/name-usage.json",
  "name": "name-usage",
  "title": "Name Usage",
  "description": "As a simpler alternative to the 3 entities Name, Taxon and Synonym a single NameUsage entity can be supplied. A NameUsage record can either be an accepted Taxon or a Synonym and is easily distinguished by its status. A NameUsage.ID acts both as a taxonID and nameID if referred to from other table, e.g TypeMaterial or VernacularName. For synonyms the `parentID` field is used to link to the accepted taxon.",
  "fields": [
    {
      "name": "ID",
      "description": "Unique identifier",
      "type": "string",
      "format": "default",
      "constraints": {
        "required": true
      }
    },
    {
      "name": "sourceID",
      "description": "Optional identifier for the source this record came from as listed in the [metadata.yaml](https://github.com/CatalogueOfLife/coldp/blob/master/metadata.yaml)",
      "type": "string",
      "format": "default"
    },
    {
      "name": "parentID",
      "description": "for taxa it points to the next higher taxon's ID to form the classification, for synonyms it points at the accepted taxon.",
      "type": "string",
      "format": "default"
    },
    {
      "name": "basionymID",
      "description": "Identifier of the name which is the original combination of this name. Also known as the basionym or protonym. Contrary to the strict basionym definition it is recommended to populate this field also for original names which should point to itself.\n\nNote there is an alternative way to share the information about an original name by using a NameRelation with `type=basionym`. The field basionymID exists for simplicity and because it is an important information to be shared.",
      "type": "string",
      "format": "default"
    },
    {
      "name": "status",
      "description": "The taxonomic name usage status which includes Synonym.status and the Taxon.provisional flag. A provisional taxon should be listed as `provisionally accepted`. Unresolved names which are neither accepted nor synonyms can be listed with status=`bare name` in which case only the Name properties are relevant. This corresponds to a lone Name record without a Taxon or Synonym record.",
      "type": "string",
      "format": "default",
      "constraints": {
        "enum": [
          "accepted",
          "provisionally accepted",
          "synonym",
          "ambiguous synonym",
          "misapplied",
          "bare name"
        ]
      }
    },
    {
      "name": "scientificName",
      "description": "Required scientific name excluding the authorship",
      "type": "string",
      "format": "default",
      "constraints": {
        "required": true
      }
    },
    {
      "name": "authorship",
      "description": "Authorship of the scientificName",
      "type": "string",
      "format": "default"
    },
    {
      "name": "rank",
      "description": "The rank of the name preferably given in case insensitive english. The recommended vocabulary is included in [rank_enum](http://api.checklistbank.org/vocab/rank).",
      "type": "string",
      "format": "default",
      "constraints": {
        "enum": [
          "superdomain",
          "domain",
          "realm",
          "subrealm",
          "superkingdom",
          "kingdom",
          "subkingdom",
          "infrakingdom",
          "superphylum",
          "phylum",
          "subphylum",
          "infraphylum",
          "parvphylum",
          "microphylum",
          "nanophylum",
          "gigaclass",
          "megaclass",
          "superclass",
          "class",
          "subclass",
          "infraclass",
          "subterclass",
          "parvclass",
          "superdivision",
          "division",
          "subdivision",
          "infradivision",
          "superlegion",
          "legion",
          "sublegion",
          "infralegion",
          "megacohort",
          "supercohort",
          "cohort",
          "subcohort",
          "infracohort",
          "gigaorder",
          "magnorder",
          "grandorder",
          "mirorder",
          "superorder",
          "order",
          "nanorder",
          "hypoorder",
          "minorder",
          "suborder",
          "infraorder",
          "parvorder",
          "falanx",
          "megafamily",
          "grandfamily",
          "superfamily",
          "epifamily",
          "family",
          "subfamily",
          "infrafamily",
          "supertribe",
          "tribe",
          "subtribe",
          "infratribe",
          "suprageneric name",
          "supergenus",
          "genus",
          "subgenus",
          "infragenus",
          "supersection",
          "section",
          "subsection",
          "superseries",
          "series",
          "subseries",
          "infrageneric name",
          "species aggregate",
          "species",
          "infraspecific name",
          "grex",
          "klepton",
          "subspecies",
          "cultivar group",
          "convariety",
          "infrasubspecific name",
          "proles",
          "natio",
          "aberration",
          "morph",
          "supervariety",
          "variety",
          "subvariety",
          "superform",
          "form",
          "subform",
          "pathovar",
          "biovar",
          "chemovar",
          "morphovar",
          "phagovar",
          "serovar",
          "chemoform",
          "forma specialis",
          "lusus",
          "cultivar",
          "mutatio",
          "strain",
          "other",
          "unranked"
        ]
      }
    },
    {
      "name": "uninomial",
      "description": "The single-word name of generic or higher rank names.",
      "type": "string",
      "format": "default"
    },
    {
      "name": "genericName",
      "description": "Corresponds to the genus field of a name and represents the atomized genus of a scientificName.",
      "type": "string",
      "format": "default"
    },
    {
      "name": "infragenericEpithet",
      "description": "The infrageneric epithet. Used as the terminal epithet for names at infrageneric ranks and optionally also for bi/trinomials In zoological names often the subgenus.",
      "type": "string",
      "format": "default"
    },
    {
      "name": "specificEpithet",
      "description": "The specific epithet in case of bi/trinomials.",
      "type": "string",
      "format": "default"
    },
    {
      "name": "infraspecificEpithet",
      "description": "The infraspecific epithet in case of bi/trinomials.",
      "type": "string",
      "format": "default"
    },
    {
      "name": "cultivarEpithet",
      "description": "The name of the cultivar for name governed by the cultivar code.",
      "type": "string",
      "format": "default"
    },
    {
      "name": "namePhrase",
      "description": "An optional, unrestricted, lose phrase appended to the name just for this synonym. E.g. the phrase \"sensu lato\" may be added to the name to describe this synonym more precisely. Or \"auct. mult.\" or \"auct. amer.\" for misapplied names that cannot refer to a single publication. Misapplied names that refer to a single publication should use `accordingToID` instead.",
      "type": "string",
      "format": "default"
    },
    {
      "name": "nameReferenceID",
      "description": "Corresponds to the nomenclatural reference otherwise given in Name.referenceID.",
      "type": "string",
      "format": "default"
    },
    {
      "name": "publishedInYear",
      "description": "The effective year the name was published, given as a 4 digit integer. It is the year that is nomenclaturally relevant for the given combination. In most cases this will be the same as the publication year given in the linked reference record via referenceID. But in some cases this might be different.",
      "type": "year",
      "format": "default"
    },
    {
      "name": "publishedInPage",
      "description": "The exact single page number where the name was published. If the description spans multiple pages, the first page should be given.",
      "type": "string",
      "format": "default"
    },
    {
      "name": "publishedInPageLink",
      "description": "A URL to the exact page where the name was published. If the description spans multiple pages, the link to the first page should be given.",
      "type": "string",
      "format": "default"
    },
    {
      "name": "code",
      "description": "The nomenclatural code the name falls under.",
      "type": "string",
      "format": "default",
      "constraints": {
        "enum": [
          "bacterial",
          "botanical",
          "cultivars",
          "phytosociological",
          "virus",
          "zoological"
        ]
      }
    },
    {
      "name": "nameStatus",
      "description": "Corresponds to the nomenclatural name status.",
      "type": "string",
      "format": "default",
      "constraints": {
        "enum": [
          "established",
          "not established",
          "acceptable",
          "unacceptable",
          "conserved",
          "rejected",
          "doubtful",
          "manuscript",
          "chresonym"
        ]
      }
    },
    {
      "name": "accordingToID",
      "description": "A reference ID to the publication that established the taxonomic concept used by this taxon. The author & year of the reference will be used to qualify the name with `sensu AUTHOR, YEAR`. Strongly recommended in case of misapplied names. The ID must refer to an existing Reference.ID within this data package.",
      "type": "string",
      "format": "default"
    },
    {
      "name": "referenceID",
      "description": "Corresponds to the taxonomic reference(s) otherwise given in Taxon/Synonym.referenceID.",
      "type": "string",
      "format": "default"
    },
    {
      "name": "scrutinizer",
      "description": "Name of the person who is the latest scrutinizer who revised or reviewed the taxonomic concept.",
      "type": "string",
      "format": "default"
    },
    {
      "name": "scrutinizerID",
      "description": "Identifier for the scrutinizer. Highly recommended are [ORCID](https://orcid.org/) ids.",
      "type": "string",
      "format": "default"
    },
    {
      "name": "scrutinizerDate",
      "description": "The [ISO8601 date](https://specs.frictionlessdata.io//table-schema/#date) when the taxonomic concept was last revised or reviewed by the scrutinizer.",
      "type": "date",
      "format": "default"
    },
    {
      "name": "extinct",
      "description": "Nullable flag indicating that the taxon is extinct (true) or extant (false). This includes species that died out very recently.",
      "type": "boolean",
      "format": "default"
    },
    {
      "name": "temporalRangeStart",
      "description": "Earliest appearance of the taxon in the geological time scale. Recommended values are geochronological names from the official [International Commission on Stratigraphy (ICS)](https://stratigraphy.org/chart) or million years before present, given with the unit `Ma` after the number, e.g. `17.4 Ma.`",
      "type": "string",
      "format": "default"
    },
    {
      "name": "temporalRangeEnd",
      "description": "Latest appearance of the taxon in the geological time scale. Recommended values are geochronological names from the official [International Commission on Stratigraphy (ICS)](https://stratigraphy.org/chart) or million years before present, given with the unit `Ma` after the number, e.g. `17.4 Ma.`",
      "type": "string",
      "format": "default"
    },
    {
      "name": "environment",
      "description": "A comma delimited list of environments this taxon is known to exist in.",
      "type": "string",
      "format": "default",
      "constraints": {
        "enum": [
          "brackish",
          "freshwater",
          "marine",
          "terrestrial"
        ]
      }
    },
    {
      "name": "species",
      "description": "The species binomial the taxon is classified in. If parentID is given this field is ignored.",
      "type": "string",
      "format": "default"
    },
    {
      "name": "section",
      "description": "The (botanical) section the taxon is classified in. Considered a botanical rank below subgenus, not a zoological above family. If parentID is given this field is ignored.",
      "type": "string",
      "format": "default"
    },
    {
      "name": "subgenus",
      "description": "The subgenus the taxon is classified in. If parentID is given this field is ignored.",
      "type": "string",
      "format": "default"
    },
    {
      "name": "genus",
      "description": "The genus the taxon is classified in. If parentID is given this field is ignored.",
      "type": "string",
      "format": "default"
    },
    {
      "name": "subtribe",
      "description": "The subtribe the taxon is classified in. If parentID is given this field is ignored.",
      "type": "string",
      "format": "default"
    },
    {
      "name": "tribe",
      "description": "The tribe the taxon is classified in. If parentID is given this field is ignored.",
      "type": "string",
      "format": "default"
    },
    {
      "name": "subfamily",
      "description": "The subfamily the taxon is classified in. If parentID is given this field is ignored.",
      "type": "string",
      "format": "default"
    },
    {
      "name": "family",
      "description": "The family the taxon is classified in. If parentID is given this field is ignored.",
      "type": "string",
      "format": "default"
    },
    {
      "name": "superfamily",
      "description": "The superfamily the taxon is classified in. If parentID is given this field is ignored.",
      "type": "string",
      "format": "default"
    },
    {
      "name": "suborder",
      "description": "The suborder the taxon is classified in. If parentID is given this field is ignored.\n\n",
      "type": "string",
      "format": "default"
    },
    {
      "name": "order",
      "description": "The order the taxon is classified in. If parentID is given this field is ignored.",
      "type": "string",
      "format": "default"
    },
    {
      "name": "subclass",
      "description": "The subclass the taxon is classified in. If parentID is given this field is ignored.",
      "type": "string",
      "format": "default"
    },
    {
      "name": "class",
      "description": "The class the taxon is classified in. If parentID is given this field is ignored.",
      "type": "string",
      "format": "default"
    },
    {
      "name": "subphylum",
      "description": "The subphylum the taxon is classified in. If parentID is given this field is ignored.",
      "type": "string",
      "format": "default"
    },
    {
      "name": "phylum",
      "description": "The phylum the taxon is classified in. If parentID is given this field is ignored.",
      "type": "string",
      "format": "default"
    },
    {
      "name": "kingdom",
      "description": "The kingdom the taxon is classified in. If parentID is given this field is ignored.",
      "type": "string",
      "format": "default"
    },
    {
      "name": "sequenceIndex",
      "description": "A integer to specify an optional custom sort order for sibling taxa sharing the same parentID in the datasets. This can be used to define a traditional ordering of orders and families for example and can be existing for parts of the dataset, e.g. higher ranks, only. The natural ordering of integers from small to large should be applied. Not that this does not have to be a unique, global index.",
      "type": "integer",
      "format": "default"
    },
    {
      "name": "link",
      "description": "A link to further information.",
      "type": "string",
      "format": "uri"
    },
    {
      "name": "nameRemarks",
      "description": "Corresponds to the nomenclatural name remarks otherwise given in Name.remarks.",
      "type": "string",
      "format": "default"
    },
    {
      "name": "remarks",
      "description": "Any further remarks",
      "type": "string",
      "format": "default"
    }
  ],
  "primaryKey": "ID",
  "foreignKeys": [
    {
      "fields": "parentID",
      "reference": {
        "resource": "taxon",
        "fields": "ID"
      }
    },
    {
      "fields": "referenceID",
      "reference": {
        "resource": "reference",
        "fields": "ID"
      }
    }
  ]
}
